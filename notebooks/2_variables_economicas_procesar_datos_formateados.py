# -*- coding: utf-8 -*-
"""procesar_datos_formateados_variables_economicas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QX91DZHUy9XTmmP3tTgs4cv5aa8GiIN4
"""

import pandas as pd
import logging
from pathlib import Path

# Configurar logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

DATA_RAW_DIR = Path('data/raw')
DATA_PROCESSED_DIR = Path('data/processed')


def procesar_ied():
    """Procesa y formatea datos de Inversion Extranjera Directa."""
    print("Procesando datos de IED...")

    try:
        df_ied = pd.read_csv('data/raw/ied_raw.csv')

        # Aplicar formato correspondiente segun el archivo original
        # Aqui se pueden agregar transformaciones especificas

        print("\n--- Datos Procesados de IED (Primeras 5 filas) ---")
        print(df_ied.head())

        DATA_PROCESSED_DIR.mkdir(parents=True, exist_ok=True)
        df_ied.to_csv('data/processed/ied_processed.csv', index=False)
        print("Datos de IED procesados guardados en 'data/processed/ied_processed.csv'")
        logging.info("✓ Datos de IED procesados exitosamente")

    except Exception as e:
        logging.error(f"✗ Error al procesar datos de IED: {e}")


def procesar_salario():
    """Procesa y formatea datos de salario mensual."""
    print("Procesando datos de Salario Mensual...")

    try:
        df_salario = pd.read_csv('data/raw/salario_raw.csv')

        # Aplicar formato correspondiente segun el archivo original
        # Aqui se pueden agregar transformaciones especificas

        print("\n--- Datos Procesados de Salario (Primeras 5 filas) ---")
        print(df_salario.head())

        DATA_PROCESSED_DIR.mkdir(parents=True, exist_ok=True)
        df_salario.to_csv('data/processed/salario_processed.csv', index=False)
        print("Datos de Salario procesados guardados en 'data/processed/salario_processed.csv'")
        logging.info("✓ Datos de Salario procesados exitosamente")

    except Exception as e:
        logging.error(f"✗ Error al procesar datos de Salario: {e}")


def procesar_pea():
    """Procesa y formatea datos de Poblacion Economicamente Activa."""
    print("Procesando datos de PEA...")

    try:
        df_pea = pd.read_csv('data/raw/pea_raw.csv')

        # Aplicar formato correspondiente segun el archivo original
        # Aqui se pueden agregar transformaciones especificas

        print("\n--- Datos Procesados de PEA (Primeras 5 filas) ---")
        print(df_pea.head())

        DATA_PROCESSED_DIR.mkdir(parents=True, exist_ok=True)
        df_pea.to_csv('data/processed/pea_processed.csv', index=False)
        print("Datos de PEA procesados guardados en 'data/processed/pea_processed.csv'")
        logging.info("✓ Datos de PEA procesados exitosamente")

    except Exception as e:
        logging.error(f"✗ Error al procesar datos de PEA: {e}")


def procesar_gasto():
    """Procesa y formatea datos de gasto publico ejecutado."""
    print("Procesando datos de Gasto Publico...")

    try:
        df_gasto = pd.read_csv('data/raw/gasto_raw.csv')

        # Aplicar formato correspondiente segun el archivo original
        # Aqui se pueden agregar transformaciones especificas

        print("\n--- Datos Procesados de Gasto (Primeras 5 filas) ---")
        print(df_gasto.head())

        DATA_PROCESSED_DIR.mkdir(parents=True, exist_ok=True)
        df_gasto.to_csv('data/processed/gasto_processed.csv', index=False)
        print("Datos de Gasto procesados guardados en 'data/processed/gasto_processed.csv'")
        logging.info("✓ Datos de Gasto procesados exitosamente")

    except Exception as e:
        logging.error(f"✗ Error al procesar datos de Gasto: {e}")


def procesar_remesas():
    """Procesa y formatea datos de remesas."""
    print("Procesando datos de Remesas...")

    try:
        df_remesas = pd.read_csv('data/raw/remesas_raw.csv')

        # Aplicar formato correspondiente segun el archivo original
        # Seleccionar y reordenar columnas de interes
        if all(col in df_remesas.columns for col in ['State', 'Quarter', 'Remittance Amount']):
            df_remesas = df_remesas[['State', 'Quarter', 'Remittance Amount']]

        print("\n--- Datos Procesados de Remesas (Primeras 5 filas) ---")
        print(df_remesas.head())

        DATA_PROCESSED_DIR.mkdir(parents=True, exist_ok=True)
        df_remesas.to_csv('data/processed/remesas_processed.csv', index=False)
        print("Datos de Remesas procesados guardados en 'data/processed/remesas_processed.csv'")
        logging.info("✓ Datos de Remesas procesados exitosamente")

    except Exception as e:
        logging.error(f"✗ Error al procesar datos de Remesas: {e}")


if __name__ == "__main__":
    print("=" * 70)
    print("PROCESAMIENTO Y FORMATEO DE DATOS - VARIABLES ECONOMICAS")
    print("=" * 70)

    procesar_ied()
    print("\n" + "-" * 70 + "\n")

    procesar_salario()
    print("\n" + "-" * 70 + "\n")

    procesar_pea()
    print("\n" + "-" * 70 + "\n")

    procesar_gasto()
    print("\n" + "-" * 70 + "\n")

    procesar_remesas()
    print("\n" + "-" * 70 + "\n")

    print("\n" + "=" * 70)
    print("PROCESAMIENTO COMPLETADO")
    print("=" * 70)